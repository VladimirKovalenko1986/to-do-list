{"mappings":"AAEU,MAAJA,EAAO,CAACC,EAAKC,KACjB,IACE,MAAMC,EAAiBC,KAAKC,UAAUH,GACtCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GAEP,MADAC,QAAQC,MAAMF,EAAIG,SACZH,C,GAMJI,EAAOX,IACX,IACE,MAAME,EAAiBG,aAAaO,QAAQZ,GAG5C,OAA0B,OAAnBE,OAA0BW,EAAYV,KAAKW,MAAMZ,E,CACxD,MAAOK,GAEP,MADAC,QAAQC,MAAMF,EAAIG,SACZH,C,GClBJQ,EAAUC,SAASC,eAAe,WACxC,IAAIC,EAAY,EAahB,SAASC,EAASC,EAAMC,GAAS,EAAOC,EAAKJ,GAC3C,MAAMK,EAAOP,SAASQ,cAAc,MAE9BC,EAAST,SAASU,eAAeN,GACvCG,EAAKI,YAAYF,GACjBF,EAAKK,QAAQN,GAAKA,EACdD,IACFE,EAAKM,UAAY,WAEnBC,KAAKH,YAAYJ,GAkDnB,SAAwBQ,GACtB,MAAMC,EAAOhB,SAASQ,cAAc,QAC9BS,EAAMjB,SAASU,eAAe,KACpCM,EAAKH,UAAY,QACjBG,EAAKL,YAAYM,GACjBF,EAAGJ,YAAYK,E,CAtDfE,CAAeX,E,CC1BjB,MAAMY,EAASnB,SAASC,eAAe,UAEjCmB,EAAOpB,SAASC,eAAe,QAErCkB,EAAOE,iBAAiB,SDCxB,WACE,MAAMC,EAAavB,EAAQd,MAAMsC,OAC5BD,GAILnB,EAASmB,GACTvB,EAAQd,MAAQ,GAwClB,SAA0BmB,EAAMC,GAAS,GACvC,MAAMmB,EAAe7B,EArDH,UAqDwB,GACpC8B,EAJiB,EAACrB,EAAMC,KAAY,C,KAAED,E,OAAMC,EAAQC,GAAIJ,IAI9CwB,CAAiBtB,EAAMC,QAClBR,IAAjB2B,EACFzC,EAxDgB,QAwDE,CAAC0C,KAEnBD,EAAaG,KAAKF,GAClB1C,EA3DgB,QA2DEyC,IAEpBtB,GAAa,C,CAhDb0B,CAAiBN,IALfO,MAAM,4B,ICHVT,EAAKC,iBAAiB,SDwBtB,UAA6BS,OAAEA,IAG7B,MAAMN,EAAe7B,EAhCH,SAkClB,GAAuB,OAAnBmC,EAAOC,QAAkB,CAC3BD,EAAOE,UAAUC,OAAO,WACxB,MAAMC,EAAYV,EAAaW,WAC7BC,GAAWC,OAAOD,EAAQ9B,MAAQ+B,OAAOP,EAAOlB,QAAQN,MAE1DkB,EAAaU,GAAW7B,QAAUmB,EAAaU,GAAW7B,M,MACrD,GAAIyB,EAAOE,UAAUM,SAAS,SAAU,CAC7CR,EAAOS,WAAWC,SAClB,MAAMN,EAAYV,EAAaW,WAC7BC,GAAWC,OAAOD,EAAQ9B,MAAQ+B,OAAOP,EAAOS,WAAW3B,QAAQN,MAErEkB,EAAaiB,OAAOP,EAAW,E,CAEjCnD,EA/CkB,QA+CAyC,E,ICzCpBkB,OAAOrB,iBAAiB,oBD0DxB,WACE,MAAMG,EAAe7B,EAjEH,cAkEGE,IAAjB2B,GAA8BA,EAAamB,OAAS,GACtDnB,EAAaoB,SAAQ,EAACxC,KAAEA,EAAIC,OAAEA,EAAMC,GAAEA,KAASH,EAASC,EAAMC,EAAQC,KACtEJ,EAAYsB,EAAaA,EAAamB,OAAS,GAAGrC,GAAK,GAEvDJ,EAAY,C","sources":["src/js/storage.js","src/js/functions.js","src/index.js"],"sourcesContent":["// Зберігаємо\n\nconst save = (key, value) => {\n  try {\n    const serializedData = JSON.stringify(value);\n    localStorage.setItem(key, serializedData);\n  } catch (err) {\n    console.error(err.message);\n    throw err;\n  }\n};\n\n// Зчитуємо;\n\nconst load = key => {\n  try {\n    const serializedData = localStorage.getItem(key);\n\n    // Робимо перевірку якщо не знайде ключ поверне undefined а в іншому разі буде null\n    return serializedData === null ? undefined : JSON.parse(serializedData);\n  } catch (err) {\n    console.error(err.message);\n    throw err;\n  }\n};\n\nexport { save, load };\n","import { save, load } from './storage';\n\nconst STORAGE_KEY = 'tasks';\n\nconst myInput = document.getElementById('myInput');\nlet currentId = 1;\n\nfunction addNewTask() {\n  const inputValue = myInput.value.trim();\n  if (!inputValue) {\n    alert('You must write something!');\n    return;\n  }\n  createLi(inputValue);\n  myInput.value = '';\n  addTaskToStorage(inputValue);\n}\n\nfunction createLi(text, isDone = false, id = currentId) {\n  const liEl = document.createElement('li');\n  // це можно замінити на textContent\n  const liText = document.createTextNode(text);\n  liEl.appendChild(liText);\n  liEl.dataset.id = id;\n  if (isDone) {\n    liEl.className = 'checked';\n  }\n  myUL.appendChild(liEl);\n  addCloseButton(liEl);\n}\n\nfunction handleTaskBehaviour({ target }) {\n  //   console.log(target.nodeName);\n  //   console.log(target.tagName);\n  const currentState = load(STORAGE_KEY);\n\n  if (target.tagName === 'LI') {\n    target.classList.toggle('checked');\n    const taskIndex = currentState.findIndex(\n      taskObj => Number(taskObj.id) === Number(target.dataset.id)\n    );\n    currentState[taskIndex].isDone = !currentState[taskIndex].isDone;\n  } else if (target.classList.contains('close')) {\n    target.parentNode.remove();\n    const taskIndex = currentState.findIndex(\n      taskObj => Number(taskObj.id) === Number(target.parentNode.dataset.id)\n    );\n    currentState.splice(taskIndex, 1);\n  }\n  save(STORAGE_KEY, currentState);\n}\n\nconst createTaskObject = (text, isDone) => ({ text, isDone, id: currentId });\n\nfunction addTaskToStorage(text, isDone = false) {\n  const currentState = load(STORAGE_KEY) || [];\n  const newTask = createTaskObject(text, isDone);\n  if (currentState === undefined) {\n    save(STORAGE_KEY, [newTask]);\n  } else {\n    currentState.push(newTask);\n    save(STORAGE_KEY, currentState);\n  }\n  currentId += 1;\n}\n\nfunction fillTasksList() {\n  const currentState = load(STORAGE_KEY);\n  if (currentState !== undefined && currentState.length > 0) {\n    currentState.forEach(({ text, isDone, id }) => createLi(text, isDone, id));\n    currentId = currentState[currentState.length - 1].id + 1;\n  } else {\n    currentId = 1; // Якщо currentState порожній, то встановлюємо початковий ID\n  }\n}\n\n// Додаємо функцію крестику\nfunction addCloseButton(li) {\n  const span = document.createElement('SPAN');\n  const txt = document.createTextNode('\\u00D7');\n  span.className = 'close';\n  span.appendChild(txt);\n  li.appendChild(span);\n}\n\nexport { addNewTask, handleTaskBehaviour, fillTasksList };\n","import { addNewTask, handleTaskBehaviour, fillTasksList } from './js/functions';\n\nconst addBtn = document.getElementById('addBtn');\n\nconst myUL = document.getElementById('myUL');\n\naddBtn.addEventListener('click', addNewTask);\nmyUL.addEventListener('click', handleTaskBehaviour);\nwindow.addEventListener('DOMContentLoaded', fillTasksList);\n"],"names":["$3fff5e8daf4b13a6$export$a1544dad697b423d","key","value","serializedData","JSON","stringify","localStorage","setItem","err","console","error","message","$3fff5e8daf4b13a6$export$11e63f7b0f3d9900","getItem","undefined","parse","$c5897a300754b7cd$var$myInput","document","getElementById","$c5897a300754b7cd$var$currentId","$c5897a300754b7cd$var$createLi","text","isDone","id","liEl","createElement","liText","createTextNode","appendChild","dataset","className","myUL","li","span","txt","$c5897a300754b7cd$var$addCloseButton","$1f0dc3b9307be026$var$addBtn","$1f0dc3b9307be026$var$myUL","addEventListener","inputValue","trim","currentState","newTask","$c5897a300754b7cd$var$createTaskObject","push","$c5897a300754b7cd$var$addTaskToStorage","alert","target","tagName","classList","toggle","taskIndex","findIndex","taskObj","Number","contains","parentNode","remove","splice","window","length","forEach"],"version":3,"file":"index.2e602af4.js.map"}
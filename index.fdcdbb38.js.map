{"mappings":"YAEU,IAAJA,EAAO,SAACC,EAAKC,GACjB,IACE,IAAMC,EAAiBC,KAAKC,UAAUH,GACtCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQC,MAAMF,EAAIG,O,GAMhBC,EAAO,SAAAX,GACX,IACE,IAAME,EAAiBG,aAAaO,QAAQZ,GAG5C,OAA0B,OAAnBE,OAA0BW,EAAYV,KAAKW,MAAMZ,E,CACxD,MAAOK,GACPC,QAAQC,MAAMF,EAAIQ,Q,GClBhBC,EAAc,QAEdC,EAAUC,SAASC,eAAe,WACpCC,EAAY,EAahB,SAASC,EAASC,G,IAAMC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,IAAcA,UAAA,GAAEE,EAAAF,UAAAC,OAAA,YAAAD,UAAA,GAAcA,UAAA,GAATJ,EACrCO,EAAOT,SAASU,cAAc,MAE9BC,EAASX,SAASY,eAAeR,GACvCK,EAAKI,YAAYF,GACjBF,EAAKK,QAAQN,GAAKA,EACdH,IACFI,EAAKM,UAAY,WAEnBC,KAAKH,YAAYJ,GACjBQ,EAAeR,E,CAwBjB,IAAMS,EAAmB,SAACd,EAAMC,G,MAAY,CAAED,OAAMC,SAAQG,GAAIN,E,EAuBhE,SAASe,EAAeE,GACtB,IAAMC,EAAOpB,SAASU,cAAc,QAC9BW,EAAMrB,SAASY,eAAe,KACpCQ,EAAKL,UAAY,QACjBK,EAAKP,YAAYQ,GACjBF,EAAGN,YAAYO,E,CC9EjB,IAAME,EAAStB,SAASC,eAAe,UAEjCsB,EAAOvB,SAASC,eAAe,QAErCqB,EAAOE,iBAAiB,SDCxB,WACE,IAAMC,EAAa1B,EAAQhB,MAAM2C,OAC5BD,GAILtB,EAASsB,GACT1B,EAAQhB,MAAQ,GAwClB,SAA0BqB,G,IAAMC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,IAAcA,UAAA,GACtCqB,EAAelC,EAAKK,GACpB8B,EAAUV,EAAiBd,EAAMC,QAClBV,IAAjBgC,EACF9C,EAAKiB,EAAa,CAAC8B,KAEnBD,EAAaE,KAAKD,GAClB/C,EAAKiB,EAAa6B,IAEpBzB,GAAa,C,CAhDb4B,CAAiBL,IALfM,MAAM,4B,ICHVR,EAAKC,iBAAiB,SDwBtB,SAA6BQ,G,IAAAC,EAAAD,EAAEC,OAGvBN,EAAelC,EAAKK,GAE1B,GAAuB,OAAnBmC,EAAOC,QAAkB,CAC3BD,EAAOE,UAAUC,OAAO,WACxB,IAAMC,EAAYV,EAAaW,WAC7B,SAAAC,G,OAAWC,OAAOD,EAAQ/B,MAAQgC,OAAOP,EAAOnB,QAAQN,G,IAE1DmB,EAAaU,GAAWhC,QAAUsB,EAAaU,GAAWhC,M,MACrD,GAAI4B,EAAOE,UAAUM,SAAS,SAAU,CAC7CR,EAAOS,WAAWC,SAClB,IAAMC,EAAYjB,EAAaW,WAC7B,SAAAC,G,OAAWC,OAAOD,EAAQ/B,MAAQgC,OAAOP,EAAOS,WAAW5B,QAAQN,G,IAErEmB,EAAakB,OAAOD,EAAW,E,CAEjC/D,EAAKiB,EAAa6B,E,ICzCpBmB,OAAOtB,iBAAiB,oBD0DxB,WACE,IAAMG,EAAelC,EAAKK,QACLH,IAAjBgC,GACFA,EAAaoB,SAAQ,SAAAf,G,OAA0B7B,EAAnB6B,EAAJ5B,KAAY4B,EAAN3B,OAAU2B,EAAFxB,G,IAExCN,EAAYyB,EAAaA,EAAapB,OAAS,GAAGC,GAAK,C","sources":["src/js/storage.js","src/js/functions.js","src/index.js"],"sourcesContent":["// Зберігаємо\n\nconst save = (key, value) => {\n  try {\n    const serializedData = JSON.stringify(value);\n    localStorage.setItem(key, serializedData);\n  } catch (err) {\n    console.error(err.mesage);\n  }\n};\n\n// Зчитуємо;\n\nconst load = key => {\n  try {\n    const serializedData = localStorage.getItem(key);\n\n    // Робимо перевірку якщо не знайде ключ поверне undefined а в іншому разі буде null\n    return serializedData === null ? undefined : JSON.parse(serializedData);\n  } catch (err) {\n    console.error(err.message);\n  }\n};\n\nexport { save, load };\n","import { save, load } from './storage';\n\nconst STORAGE_KEY = 'tasks';\n\nconst myInput = document.getElementById('myInput');\nlet currentId = 1;\n\nfunction addNewTask() {\n  const inputValue = myInput.value.trim();\n  if (!inputValue) {\n    alert('You must write something!');\n    return;\n  }\n  createLi(inputValue);\n  myInput.value = '';\n  addTaskToStorage(inputValue);\n}\n\nfunction createLi(text, isDone = false, id = currentId) {\n  const liEl = document.createElement('li');\n  // це можно замінити на textContent\n  const liText = document.createTextNode(text);\n  liEl.appendChild(liText);\n  liEl.dataset.id = id;\n  if (isDone) {\n    liEl.className = 'checked';\n  }\n  myUL.appendChild(liEl);\n  addCloseButton(liEl);\n}\n\nfunction handleTaskBehaviour({ target }) {\n  //   console.log(target.nodeName);\n  //   console.log(target.tagName);\n  const currentState = load(STORAGE_KEY);\n\n  if (target.tagName === 'LI') {\n    target.classList.toggle('checked');\n    const taskIndex = currentState.findIndex(\n      taskObj => Number(taskObj.id) === Number(target.dataset.id)\n    );\n    currentState[taskIndex].isDone = !currentState[taskIndex].isDone;\n  } else if (target.classList.contains('close')) {\n    target.parentNode.remove();\n    const taskIndex = currentState.findIndex(\n      taskObj => Number(taskObj.id) === Number(target.parentNode.dataset.id)\n    );\n    currentState.splice(taskIndex, 1);\n  }\n  save(STORAGE_KEY, currentState);\n}\n\nconst createTaskObject = (text, isDone) => ({ text, isDone, id: currentId });\n\nfunction addTaskToStorage(text, isDone = false) {\n  const currentState = load(STORAGE_KEY);\n  const newTask = createTaskObject(text, isDone);\n  if (currentState === undefined) {\n    save(STORAGE_KEY, [newTask]);\n  } else {\n    currentState.push(newTask);\n    save(STORAGE_KEY, currentState);\n  }\n  currentId += 1;\n}\n\nfunction fillTasksList() {\n  const currentState = load(STORAGE_KEY);\n  if (currentState !== undefined) {\n    currentState.forEach(({ text, isDone, id }) => createLi(text, isDone, id));\n  }\n  currentId = currentState[currentState.length - 1].id + 1;\n}\n\n// Додаємо функцію крестику\nfunction addCloseButton(li) {\n  const span = document.createElement('SPAN');\n  const txt = document.createTextNode('\\u00D7');\n  span.className = 'close';\n  span.appendChild(txt);\n  li.appendChild(span);\n}\n\nexport { addNewTask, handleTaskBehaviour, fillTasksList };\n","import { addNewTask, handleTaskBehaviour, fillTasksList } from './js/functions';\n\nconst addBtn = document.getElementById('addBtn');\n\nconst myUL = document.getElementById('myUL');\n\naddBtn.addEventListener('click', addNewTask);\nmyUL.addEventListener('click', handleTaskBehaviour);\nwindow.addEventListener('DOMContentLoaded', fillTasksList);\n"],"names":["$e40a24b7fc93604f$export$a1544dad697b423d","key","value","serializedData","JSON","stringify","localStorage","setItem","err","console","error","mesage","$e40a24b7fc93604f$export$11e63f7b0f3d9900","getItem","undefined","parse","message","$948879cda51999ba$var$STORAGE_KEY","$948879cda51999ba$var$myInput","document","getElementById","$948879cda51999ba$var$currentId","$948879cda51999ba$var$createLi","text","isDone","arguments","length","id","liEl","createElement","liText","createTextNode","appendChild","dataset","className","myUL","$948879cda51999ba$var$addCloseButton","$948879cda51999ba$var$createTaskObject","li","span","txt","$b8f9b7833fa37166$var$addBtn","$b8f9b7833fa37166$var$myUL","addEventListener","inputValue","trim","currentState","newTask","push","$948879cda51999ba$var$addTaskToStorage","alert","param","target","tagName","classList","toggle","taskIndex","findIndex","taskObj","Number","contains","parentNode","remove","taskIndex1","splice","window","forEach"],"version":3,"file":"index.fdcdbb38.js.map"}